TARGET := brute

CC := gcc
CFLAGS := -O3 -Wall -flto
LDFLAGS := -lSDL2 -lm

BUILDDIR := buildsdl
SRCDIR := src

CFILES := \
	src/a_actor.c \
	src/a_player.c \
	src/b_main.c \
	src/i_sdl.c \
	src/m_iter.c \
	src/m_load.c \
	src/m_map.c \
	src/r_draw.c \
	src/r_fixed.c \
	src/r_flat.c \
	src/r_local.c \
	src/r_main.c \
	src/r_sector.c \
	src/r_wall.c \
	src/u_aabb.c \
	src/u_error.c \
	src/u_file.c \
	src/u_format.c \
	src/u_list.c \
	src/u_math.c \
	src/u_vec.c \
	src/y_log.c \
	src/z_memory.c

OFILES := $(patsubst $(SRCDIR)/%.c,$(BUILDDIR)/%.o,$(CFILES))
DFILES := $(patsubst $(SRCDIR)/%.c,$(BUILDDIR)/%.d,$(CFILES))

all: $(TARGET)

$(TARGET): $(OFILES)
	$(CC) $(CFLAGS) $(OFILES) -o $@ $(LDFLAGS)

$(BUILDDIR)/%.o: $(SRCDIR)/%.c
	mkdir -p $(BUILDDIR)
	$(CC) $(CFLAGS) -MMD -MF $(BUILDDIR)/$*.d -c -o $@ $<

clean:
	rm -rf $(BUILDDIR)
	rm -f $(TARGET)

run: $(TARGET)
	./$(TARGET)

.PHONY: all clean run

-include $(DFILES)
